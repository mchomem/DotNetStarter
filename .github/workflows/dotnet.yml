on:
  push:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout do código
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Garante que todas as tags sejam buscadas

    # Configura o .NET SDK
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0

    # Obtém a última tag ou usa v0.0.0 se não houver nenhuma
    - name: Get latest tag
      id: version
      run: |
        # Obtém todas as tags e ordena semanticamente
        TAG=$(git tag | sort -V | tail -n 1)
        if [ -z "$TAG" ]; then
          TAG="v0.0.0"
        fi
        echo "Latest tag: $TAG"

        # Incrementa o patch version (vX.Y.Z -> vX.Y.(Z+1))
        VERSION=${TAG#v}
        MAJOR=$(echo $VERSION | awk -F. '{print $1}')
        MINOR=$(echo $VERSION | awk -F. '{print $2}')
        PATCH=$(echo $VERSION | awk -F. '{print $3+1}')
        NEW_VERSION="$MAJOR.$MINOR.$PATCH"

        echo "New version: $NEW_VERSION"
        echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

    # Cria uma nova tag no repositório (localmente)
    - name: Create new tag
      run: |
        echo "Creating tag: ${{ env.NEW_VERSION }}"
        git tag ${{ env.NEW_VERSION }}

    # Restaura as dependências do projeto
    - name: Restore dependencies
      run: dotnet restore

    # Compila o projeto
    - name: Build solution
      run: dotnet build --configuration Release

    # Verifica a formatação do código
    - name: Format code
      run: dotnet format ./DotNetStarter.sln

    # Empacota o projeto para NuGet
    - name: Pack NuGet Package
      run: dotnet pack DotNetStarter/DotNetStarter.CLI.csproj --configuration Release -o ./nupkg -p:PackageVersion=${{ env.NEW_VERSION }}

    # Lista os pacotes gerados (para depuração)
    - name: List generated packages
      run: ls -l ./nupkg

    # Publica no NuGet
    - name: Publish to NuGet
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
      run: dotnet nuget push ./nupkg/DotNetStarter.CLI.${{ env.NEW_VERSION }}.nupkg -k $NUGET_API_KEY -s https://api.nuget.org/v3/index.json
