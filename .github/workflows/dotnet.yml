name: .NET Build, Check, Pack and Publish

on:
  push:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout do código
    - name: Checkout repository
      uses: actions/checkout@v3

    # Configura o .NET SDK
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0

    # Extrai a versão da tag
    - name: Extract version from tag
      id: version
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "Version from tag: $VERSION"
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    # Restaura as dependências do projeto
    - name: Restore dependencies
      run: dotnet restore

    # Compila o projeto
    - name: Build solution
      run: dotnet build --configuration Release

    # Verifica a formatação do código
    - name: Format code
      run: dotnet format ./DotNetStarter.sln

    # Empacota o projeto para NuGet
    - name: Pack NuGet Package
      run: dotnet pack DotNetStarter/DotNetStarter.CLI.csproj --configuration Release -o ./nupkg -p:PackageVersion=${{ env.VERSION }}

    # Lista os pacotes gerados (para depuração)
    - name: List generated packages
      run: ls -l ./nupkg

    # Publica no NuGet
    - name: Publish to NuGet
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
      run: dotnet nuget push ./nupkg/DotNetStarter.CLI.${{ env.VERSION }}.nupkg -k $NUGET_API_KEY -s https://api.nuget.org/v3/index.json
